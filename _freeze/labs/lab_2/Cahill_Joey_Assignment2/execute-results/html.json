{
  "hash": "1a8325658a05c7732270b2b26314e669",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: \"Joey Cahill\"\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n---\n\n## Healthcare Access for Vulnerable Populations\n\n\nWhich Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?\n\n\n#### Data Collection\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(here)\nlibrary(dplyr)\nlibrary(knitr)\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n# Load census key\n\ncensus_api_key(\"yourkeyhere\")\n\n\n# Load spatial data\n\n::: {.cell}\n\n```{.r .cell-code}\npa_counties <- st_read(here(\"labs/lab_2/data/Pennsylvania_County_Boundaries.shp\"))\nhospitals <- st_read(here(\"labs/lab_2/data/hospitals.geojson\"))\ncensus_tracts <- tracts(state = \"PA\", cb = TRUE)\n\n# Transform CRS for consistency\npa_counties_proj <- st_transform(pa_counties, 2272)\nhospitals_proj <- st_transform(hospitals, 2272)\ncensus_tracts_proj <- st_transform(census_tracts, 2272)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_table <- tibble(\n  Dataset = c(\"Pennsylvania Counties\", \"Hospitals\", \"Census Tracts\"),\n  `Number of Features` = c(\n    nrow(pa_counties_proj),\n    nrow(hospitals_proj),\n    nrow(census_tracts_proj)\n  ),\n  CRS = c(\n    st_crs(pa_counties_proj)$input,\n    st_crs(hospitals_proj)$input,\n    st_crs(census_tracts_proj)$input\n  )\n)\n\nkable(summary_table, caption = \"Summary of Spatial Datasets Loaded\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Summary of Spatial Datasets Loaded\n\n|Dataset               | Number of Features|CRS       |\n|:---------------------|------------------:|:---------|\n|Pennsylvania Counties |                 67|EPSG:2272 |\n|Hospitals             |                223|EPSG:2272 |\n|Census Tracts         |               3445|EPSG:2272 |\n\n\n:::\n:::\n\n---\n\n#### Demographic Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\npa_basic <- get_acs(\n  geography = \"tract\",\n  state = \"PA\",\n  year = 2022,\n  variables = c(\n    total_pop = \"B01003_001\",\n    median_income = \"B19013_001\"\n  ),\n  geometry = FALSE,\n  output = \"wide\")\n\nage_vars <- c(\n  paste0(\"B01001_0\", 20:25),\n  paste0(\"B01001_0\", 44:49))\n\npa_age <- get_acs(\n  geography = \"tract\",\n  state = \"PA\",\n  year = 2022,\n  variables = age_vars,\n  geometry = FALSE,\n  output = \"wide\")\n\npa_age <- pa_age %>%\n  select(GEOID, ends_with(\"E\")) %>%\n  mutate(across(-GEOID, as.numeric)) %>%\n  mutate(pop_65plus = rowSums(across(-GEOID), na.rm = TRUE)) %>%\n  select(GEOID, pop_65plus)\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Join to tract boundaries\npa_demographics <- census_tracts_proj %>%\n  left_join(pa_basic, by = \"GEOID\") %>%\n  left_join(pa_age, by = \"GEOID\") %>%\n  mutate(\n    total_pop = total_popE,\n    median_income = median_incomeE\n  ) %>%\n  select(GEOID, tract_name = NAMELSAD, total_pop, median_income, pop_65plus, geometry)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npa_demographics %>%\n  st_drop_geometry() %>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        GEOID          tract_name total_pop median_income pop_65plus\n1 42001031101 Census Tract 311.01      5070         61847        946\n2 42013100400   Census Tract 1004      1589         67120        238\n3 42013100500   Census Tract 1005      3380         50450        463\n4 42013100800   Census Tract 1008      1860         64583        282\n5 42013101900   Census Tract 1019      1436         16429        636\n6 42011011200    Census Tract 112      4533         56818        600\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(pa_demographics)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3445\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nincome_summary <- pa_demographics %>%\n  st_drop_geometry() %>%\n  summarise(\n    `Tracts with Missing Income` = sum(is.na(median_income)),\n    `Median Income (USD)` = median(median_income, na.rm = TRUE)\n  )\n\nkable(income_summary, \n      caption = paste(\"PA Census Tract Income Summary - ACS 2022\"))\n```\n\n::: {.cell-output-display}\n\n\nTable: PA Census Tract Income Summary - ACS 2022\n\n| Tracts with Missing Income| Median Income (USD)|\n|--------------------------:|-------------------:|\n|                         62|               70188|\n\n\n:::\n:::\n\n---\n\n#### Define Vulnerable Populations \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter for vulnerable tracts based on your criteria\nincome_threshold <- quantile(pa_demographics$median_income, 0.25, na.rm = TRUE)\npa_demographics <- pa_demographics %>%\n  mutate(pct_65plus = (pop_65plus / total_pop) * 100)\nelderly_threshold <- 20\n\nvulnerable_tracts <- pa_demographics %>%\n  filter(\n    median_income < income_threshold,\n    pct_65plus >= elderly_threshold\n  )\n\n# vulnerable tracts count\nnum_vulnerable <- nrow(vulnerable_tracts)\n\n# Percent of all tracts\npct_vulnerable <- (num_vulnerable / nrow(pa_demographics)) * 100\n\nvulnerability_summary <- tibble(\n  `ACS Year` = \"2022\",\n  `Income Threshold (USD)` = round(income_threshold, 0),\n  `Elderly Threshold (%)` = elderly_threshold,\n  `Vulnerable Tracts (n)` = nrow(vulnerable_tracts),\n  `Percent of PA Tracts` = round((nrow(vulnerable_tracts)/nrow(pa_demographics))*100, 1))\n\nkable(vulnerability_summary, caption = \"Summary of Vulnerable Census Tracts in PA\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Summary of Vulnerable Census Tracts in PA\n\n|ACS Year | Income Threshold (USD)| Elderly Threshold (%)| Vulnerable Tracts (n)| Percent of PA Tracts|\n|:--------|----------------------:|---------------------:|---------------------:|--------------------:|\n|2022     |                  55924|                    20|                   273|                  7.9|\n\n\n:::\n\n```{.r .cell-code}\nvulnerable_tracts %>%\n  st_drop_geometry() %>%\n  select(GEOID, tract_name, median_income, pop_65plus, pct_65plus) %>%\n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        GEOID        tract_name median_income pop_65plus pct_65plus\n1 42013101900 Census Tract 1019         16429        636   44.28969\n2 42021013000  Census Tract 130         47825        562   21.14372\n3 42065950100 Census Tract 9501         47404        531   24.22445\n4 42071011300  Census Tract 113         55346       1135   25.87189\n5 42079217700 Census Tract 2177         46199       1120   21.30087\n6 42097082100  Census Tract 821         31944        599   25.48936\n```\n\n\n:::\n:::\n\n\n\nFor this analysis, I chose an income threshold below the 25th percentile for all tract incomes. This is adjustable in the code but gave me a good starting point for the tracts most vulnerable to poverty.\n\nThe analysis utilized a 20% threshold for elderly population. The 65+ population makes up 19% of PA's overall population according to 2020 US Census data. Identifying tracts that exceed this threshold is a good indication of it being disproportionately elderly.\n\n273 Tracts meet the defined vulnerability critea in this study representing 9% of Tracts in PA.\n\n---\n\n#### Calculate Distance to Hospitals \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform vulnerable tracts to projected CRS for distance calculations\nvulnerable_tracts_proj <- vulnerable_tracts %>%\n  st_transform(2272)\n\n# Compute centroids\nvulnerable_centroids <- st_centroid(vulnerable_tracts_proj)\n\n# Distance matrix to hospitals\ndist_matrix <- st_distance(vulnerable_centroids, hospitals_proj)\n\n# Minimum distance per tract in miles\nvulnerable_tracts_proj <- vulnerable_tracts_proj %>%\n  mutate(dist_to_hospital_mi = apply(dist_matrix, 1, min) / 5280)\n\n# Summary\ndistance_summary <- vulnerable_tracts_proj %>%\n  st_drop_geometry() %>%\n  summarise(\n    avg_distance_mi = mean(dist_to_hospital_mi),\n    max_distance_mi = max(dist_to_hospital_mi),\n    tracts_over_15_mi = sum(dist_to_hospital_mi > 15)\n  )\n\ndistance_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  avg_distance_mi max_distance_mi tracts_over_15_mi\n1        4.540409        25.62221                14\n```\n\n\n:::\n:::\n\n\nI chose to use EPSG:2272 (PA State Plane South (US feet)) for the projection of this data because it provides an accurate projection of points for PA in comparison to broader projections. I specifically chose the \"feet\" projection because it made conversion to miles easier.\n\nThis analysis found that the average distance to the nearest hospital for vulnerable tracts was 4.5 miles and saw a maximum distance of 25.6 miles. There were 14 tracts in our vulnerable sample that were over 15 miles from the nearest hospital. \n\n---\n\n#### Identify Underserved Areas\n\n**Underserved Areas**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\nvulnerable_tracts_proj <- vulnerable_tracts_proj %>%\n  mutate(underserved = as.logical(dist_to_hospital_mi > 15))\n\nunderserved_summary <- vulnerable_tracts_proj %>%\n  st_drop_geometry() %>%\n  summarise(\n    n_underserved = sum(underserved),\n    pct_underserved = round(100 * n_underserved / n(), 1),\n    total_vulnerable = n()\n  )\n\nunderserved_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  n_underserved pct_underserved total_vulnerable\n1            14             5.1              273\n```\n\n\n:::\n:::\n\n\nContinuing this analysis, I identified tracts that were more than 15 miles away from the nearest hospital as undeserved. This definition netted 14 undeserved Tracts making up 5.1 percent of the vulnerable Tracts. \n\nThis surprised me as I thought the amount would be higher. PA is a very rural state but it seems I underestimated the sheer number of hospitals in the state. That said, 14 undeserved tracts is still a significant number in terms of population without adequate access to healthcare.\n\n---\n\n#### Aggregate to County Level\n\n**County Level Aggregate**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join tracts to counties\nvulnerable_tracts_county <- vulnerable_tracts_proj %>%\n  st_join(pa_counties_proj %>% select(COUNTY_NAM), left = TRUE)\n\ncounty_stats <- vulnerable_tracts_county %>%\n  st_drop_geometry() %>%\n  group_by(COUNTY_NAM) %>%\n  summarise(\n    n_vulnerable_tracts = n(),\n    n_underserved_tracts = sum(underserved),\n    pct_underserved = round(100 * n_underserved_tracts / n_vulnerable_tracts, 1),\n    avg_distance_mi = mean(dist_to_hospital_mi),\n    total_vulnerable_pop = sum(total_pop, na.rm = TRUE)   # <- use the correct column name\n  ) %>%\n  arrange(desc(pct_underserved))\n\n\ncounty_stats\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 59 × 6\n   COUNTY_NAM n_vulnerable_tracts n_underserved_tracts pct_underserved\n   <chr>                    <int>                <int>           <dbl>\n 1 COLUMBIA                     1                    1           100  \n 2 PERRY                        2                    2           100  \n 3 MONROE                       3                    2            66.7\n 4 CAMERON                      4                    2            50  \n 5 CLINTON                      2                    1            50  \n 6 DAUPHIN                      2                    1            50  \n 7 SULLIVAN                     2                    1            50  \n 8 CLARION                      5                    2            40  \n 9 ELK                          5                    2            40  \n10 BRADFORD                     3                    1            33.3\n# ℹ 49 more rows\n# ℹ 2 more variables: avg_distance_mi <dbl>, total_vulnerable_pop <dbl>\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_pct_underserved <- county_stats %>%\n  arrange(desc(pct_underserved)) %>%\n  slice_head(n = 5) %>%\n  select(COUNTY_NAM, pct_underserved, n_vulnerable_tracts, n_underserved_tracts)\n\ntop_vulnerable_pop <- county_stats %>%\n  arrange(desc(total_vulnerable_pop)) %>%\n  slice_head(n = 5) %>%\n  select(COUNTY_NAM, total_vulnerable_pop, n_underserved_tracts, pct_underserved)\n\nsummary_list <- list(\n  Top5_ByPctUnderserved = top_pct_underserved,\n  Top5_ByVulnerablePop = top_vulnerable_pop\n)\n\nsummary_list\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$Top5_ByPctUnderserved\n# A tibble: 5 × 4\n  COUNTY_NAM pct_underserved n_vulnerable_tracts n_underserved_tracts\n  <chr>                <dbl>               <int>                <int>\n1 COLUMBIA             100                     1                    1\n2 PERRY                100                     2                    2\n3 MONROE                66.7                   3                    2\n4 CAMERON               50                     4                    2\n5 CLINTON               50                     2                    1\n\n$Top5_ByVulnerablePop\n# A tibble: 5 × 4\n  COUNTY_NAM   total_vulnerable_pop n_underserved_tracts pct_underserved\n  <chr>                       <dbl>                <int>           <dbl>\n1 ALLEGHENY                  112690                    0             0  \n2 PHILADELPHIA                95785                    0             0  \n3 WESTMORELAND                64907                    0             0  \n4 FAYETTE                     55543                    0             0  \n5 LUZERNE                     40300                    1             7.1\n```\n\n\n:::\n:::\n\n\n\nOnce vulnerability was aggregated on the county level, I found that Columbia, Perry, Monroe, Cameron, and Clinton Counties had the highest percentage of vulnerable tracts. Meanwhile, Allegheny, Philadelphia, Westmoreland, Fayette, and Luzerne had the highest level of population living far from the nearest hospital. \n\nI noticed that lower population rural counties tend to have the most underserved tracts while higher population counties have more population far from hospitals. This is likely due to the population density of these areas. One Tract being a large distance from a hospital in Philadelphia for example, contains a much higher population than several Tracts (even underserved ones) in rural counties. \n---\n\n#### Summary Table \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create and format priority counties table\n\ncounty_priority <- county_stats %>%\n  mutate(\n    priority_score = pct_underserved * total_vulnerable_pop\n  ) %>%\n  arrange(desc(priority_score)) %>%\n  slice_head(n = 10) %>%\n  select(\n    County = COUNTY_NAM,\n    `Vulnerable Tracts` = n_vulnerable_tracts,\n    `Underserved Tracts` = n_underserved_tracts,\n    `% Underserved` = pct_underserved,\n    `Average Distance (mi)` = avg_distance_mi,\n    `Total Vulnerable Population` = total_vulnerable_pop)\n\ncounty_priority <- county_priority %>%\n  mutate(\n    `% Underserved` = percent(`% Underserved` / 100),\n    `Average Distance (mi)` = round(`Average Distance (mi)`, 1),\n    `Total Vulnerable Population` = comma(`Total Vulnerable Population`),\n    `Vulnerable Tracts` = comma(`Vulnerable Tracts`),\n    `Underserved Tracts` = comma(`Underserved Tracts`))\n\nkable(\n  county_priority,\n  caption = \"Top 10 Priority Counties for Healthcare Investment in Pennsylvania Based on Vulnerable Populations and Access to Hospitals\",\n  align = \"lrrrrr\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment in Pennsylvania Based on Vulnerable Populations and Access to Hospitals\n\n|County     | Vulnerable Tracts| Underserved Tracts| % Underserved| Average Distance (mi)| Total Vulnerable Population|\n|:----------|-----------------:|------------------:|-------------:|---------------------:|---------------------------:|\n|CLEARFIELD |                10|                  3|         30.0%|                  12.8|                      34,060|\n|PERRY      |                 2|                  2|        100.0%|                  17.5|                       5,800|\n|CLARION    |                 5|                  2|         40.0%|                  12.4|                      12,929|\n|ELK        |                 5|                  2|         40.0%|                  14.0|                      12,550|\n|MONROE     |                 3|                  2|         66.7%|                  12.9|                       7,428|\n|CAMERON    |                 4|                  2|         50.0%|                  14.9|                       8,919|\n|BRADFORD   |                 3|                  1|         33.3%|                   9.6|                      12,646|\n|DAUPHIN    |                 2|                  1|         50.0%|                   9.9|                       8,410|\n|FRANKLIN   |                 5|                  1|         20.0%|                   4.8|                      19,158|\n|CENTRE     |                 3|                  1|         33.3%|                  15.1|                      11,192|\n\n\n:::\n:::\n\n\n\n\nThe above table contains the top 10 priority counties for healthcare investment in PA. These counties were identified by multiplying percent of underserved tracts by total vulnerable population to arrive at an overall priority score. Counties with both high vulnerable populations and high percentages of underserved communities are prioritized in this analysis.\n---\n\n\n### County-Level Choropleth \n\n\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\npa_counties_map <- pa_counties_proj %>%\n  left_join(county_stats, by = c(\"COUNTY_NAM\"))\n\n\nggplot() +\n\n  geom_sf(data = pa_counties_map, aes(fill = pct_underserved), color = \"white\", size = 0.3) +\n  # Hospital locations\n  geom_sf(data = hospitals_proj, color = \"red\", size = 1.5, shape = 21, fill = \"yellow\") +\n  # Color scale\n  scale_fill_viridis_c(\n    option = \"plasma\",\n    name = \"% Vulnerable Tracts Underserved\",\n    labels = function(x) paste0(round(x, 1), \"%\")\n  ) +\n\n  labs(\n    title = \"County-Level Healthcare Access Challenges in Pennsylvania\",\n    subtitle = \"Percentage of vulnerable census tracts more than 15 miles from nearest hospital\",\n    caption = \"Source: ACS 2018–2022 & PA Hospitals GIS Data\"\n  ) +\n\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    plot.caption = element_text(size = 9)\n  )\n```\n\n::: {.cell-output-display}\n![](Cahill_Joey_Assignment2_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### Detailed Vulnerability Map \n\n\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create detailed tract-level map\npa_counties_map <- pa_counties_proj\nhospitals_map <- hospitals_proj\ntracts_map <- vulnerable_tracts_proj\n\nunderserved_tracts <- tracts_map %>%\n  filter(underserved)\n\nggplot() +\n  # County boundaries as base\n  geom_sf(data = pa_counties_map, fill = \"gray95\", color = \"gray60\", size = 0.3) +\n  # All vulnerable tracts lightly for context\n  geom_sf(data = tracts_map, fill = \"lightblue\", color = NA, alpha = 0.3) +\n  # Underserved vulnerable tracts highlighted\n  geom_sf(data = underserved_tracts, fill = \"red\", color = \"darkred\", size = 0.2) +\n  # Hospital locations\n  geom_sf(data = hospitals_map, color = \"black\", fill = \"yellow\", shape = 21, size = 1.5) +\n  # Titles\n  labs(\n    title = \"Underserved Vulnerable Census Tracts in Pennsylvania\",\n    subtitle = \"Red tracts are vulnerable populations located more than 15 miles from nearest hospital\",\n    caption = \"Source: ACS 2018–2022 & PA Hospitals GIS Data\"\n  ) +\n  # Clean map theme\n  theme_void() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16),\n    plot.subtitle = element_text(size = 12),\n    plot.caption = element_text(size = 9)\n  )\n```\n\n::: {.cell-output-display}\n![](Cahill_Joey_Assignment2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n###  Distribution Analysis\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create distribution visualization\nggplot(vulnerable_tracts_proj, aes(x = dist_to_hospital_mi)) +\n  geom_histogram(binwidth = 2, fill = \"steelblue\", color = \"white\", alpha = 0.8) +\n  geom_vline(xintercept = 15, linetype = \"dashed\", color = \"red\", size = 1) +\n  labs(\n    title = \"Distribution of Distances from Vulnerable Tracts to Nearest Hospital\",\n    subtitle = \"Red dashed line indicates 15 miles threshold for underserved tracts\",\n    x = \"Distance to Nearest Hospital (miles)\",\n    y = \"Number of Vulnerable Tracts\",\n    caption = \"Source: ACS 2018–2022 & PA Hospitals GIS Data\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 12)\n  ) +\n  scale_x_continuous(breaks = seq(0, max(vulnerable_tracts_proj$dist_to_hospital_mi), by = 5)) +\n  scale_y_continuous(labels = comma)\n```\n\n::: {.cell-output-display}\n![](Cahill_Joey_Assignment2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n### Your Analysis\n\n**Analysis of Bike Related Crashes in Philadelphia:**\n\nSources:\n\nhttps://opendataphilly.org/datasets/bike-network/\nhttps://opendataphilly.org/datasets/crashes/\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load your additional dataset\nbike_network <- st_read(here(\"labs/lab_2/data/Bike_Network.geojson\"))\n\nhead(bike_network)\n\ncollision_crashes <- st_read(here(\"labs/lab_2/data/collision_crash_2020_2024/collision_crash_2020_2024.shp\"))\n\nhead(collision_crashes)\n```\n:::\n\n\n**Data Source Discussion:**\n\nI chose two datasets pertaining to bicycling in Philadelphia. The first, Bike Network, contains information about bike infrastructure in the city as of 2025. The second, Collision Crash, is a dataset containing all crash reports in the city from 2020-2024.I chose these datasets to work with because I was recently struck by a car in a bike lane in Philadelphia and want to find areas of high incident rate. Bike Network contains 5,225 features and contains EPSG:4326. Collision Crash contains 36,303 features and WGS 84 / Pseudo-Mercator. I will need to transform the crash points to EPSG:4326 to perform my analysis. \n---\n\n**Research question**\n\nDo areas with higher protection for cyclists reduce accidents and injuries?\n\n---\n\n3. **Conduct spatial analysis**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial analysis\n\n# CRS Alignment\nbike_network_proj <- st_transform(bike_network, 2272)\ncollision_crashes_proj <- st_transform(collision_crashes, 2272)\n\n# Reduce bike network to relevant columns\nbike_network_reduced <- bike_network_proj %>%\n  select(SEG_ID, STREETNAME, TYPE, CLASS, geometry)\n\n# Reduces crashes to only those involving bikes\ncrashes_reduced <- collision_crashes_proj %>%\n  select(objectid, crash_year, bicycle_co, bicycle_de, bicycle_su, injury_cou, geometry)\n\n# Creating 10m buffer around crashes to accurately map to bike lane\nbike_buffers <- st_buffer(bike_network_reduced, dist = 32.8)\n\n# Finding crashes within buffer\ncrashes_in_buffer <- st_join(crashes_reduced, bike_buffers, join = st_within)\n\n# identifying crashes by protection type\ncrash_summary <- crashes_in_buffer %>%\n  st_drop_geometry() %>%\n  group_by(TYPE) %>%\n  summarise(\n    total_crashes = n(),\n    total_bicycle_crashes = sum(bicycle_co + bicycle_de + bicycle_su, na.rm = TRUE),\n    total_injuries = sum(injury_cou, na.rm = TRUE)\n  ) %>%\n  arrange(desc(total_bicycle_crashes))\n\ncrash_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 4\n   TYPE                       total_crashes total_bicycle_crashes total_injuries\n   <chr>                              <int>                 <int>          <int>\n 1 Conventional                       15896                   651          16858\n 2 <NA>                               22031                   586          19802\n 3 Paint Buffered                      3542                   236           3716\n 4 Sharrow                             2830                   147           2826\n 5 Separated Bike Lane                 1027                   112           1021\n 6 One Way Separated Bike La…          1412                    53           1350\n 7 Bus Bike Lane                        240                    19            260\n 8 Two Way Separated Bike La…           379                    14            364\n 9 Conventional w Sharrows               57                     8             46\n10 Dashed Bike Lane                      44                     8             33\n11 Contraflow                           147                     7            143\n12 Conventional & Dashed Bik…             3                     0              3\n13 Paint Buffered w Conventi…            88                     0            102\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# creating crash summary calculating the number of injuries per bike crash\ncrash_summary <- crashes_in_buffer %>%\n  st_drop_geometry() %>%\n  group_by(TYPE) %>%\n  summarise(\n    total_crashes = n(),  # all crashes in buffer\n    total_bicycle_crashes = sum(bicycle_co + bicycle_de + bicycle_su, na.rm = TRUE),\n    total_injuries = sum(injury_cou, na.rm = TRUE)\n  ) %>%\n  mutate(\n    injury_rate = total_injuries / total_bicycle_crashes\n  ) %>%\n  arrange(desc(total_bicycle_crashes))\n\n\n# normalizing based on lane length\nbike_lengths <- bike_network_reduced %>%\n  mutate(length_m = st_length(geometry)) %>%\n  st_drop_geometry() %>%\n  group_by(TYPE) %>%\n  summarise(total_length_m = sum(length_m))\n\n# merge lane length with crash summary\ncrash_summary <- crash_summary %>%\n  left_join(bike_lengths, by = \"TYPE\") %>%\n  mutate(\n    crashes_per_mile = total_bicycle_crashes / (as.numeric(total_length_m) / 1609.34),\n    injuries_per_mile = total_injuries / (as.numeric(total_length_m) / 1609.34)\n  )\n\ncrash_summary\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 8\n   TYPE           total_crashes total_bicycle_crashes total_injuries injury_rate\n   <chr>                  <int>                 <int>          <int>       <dbl>\n 1 Conventional           15896                   651          16858       25.9 \n 2 <NA>                   22031                   586          19802       33.8 \n 3 Paint Buffered          3542                   236           3716       15.7 \n 4 Sharrow                 2830                   147           2826       19.2 \n 5 Separated Bik…          1027                   112           1021        9.12\n 6 One Way Separ…          1412                    53           1350       25.5 \n 7 Bus Bike Lane            240                    19            260       13.7 \n 8 Two Way Separ…           379                    14            364       26   \n 9 Conventional …            57                     8             46        5.75\n10 Dashed Bike L…            44                     8             33        4.12\n11 Contraflow               147                     7            143       20.4 \n12 Conventional …             3                     0              3      Inf   \n13 Paint Buffere…            88                     0            102      Inf   \n# ℹ 3 more variables: total_length_m [US_survey_foot], crashes_per_mile <dbl>,\n#   injuries_per_mile <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(crash_summary, aes(x = TYPE, y = injury_rate)) +\n  geom_col(fill = \"steelblue\") +\n  labs(\n    title = \"Average Injuries per Bicycle Crash by Bike Lane Type\",\n    x = \"Bike Lane Type\",\n    y = \"Injury Rate (Injuries per Bicycle Crash)\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Cahill_Joey_Assignment2_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Using Tmap to overlay Bike Protection and bike related crashes on a map to view incidents.\nlibrary(tmap)\n\ntmap_mode(\"plot\")\n\nbike_crash_map <- \n  tm_shape(bike_network_reduced) +\n    tm_lines(col = \"TYPE\", lwd = 2, title.col = \"Bike Lane Type\") +\n  tm_shape(crashes_reduced) +\n    tm_dots(col = \"red\", size = 0.05, alpha = 0.5, title = \"Crashes\") +\n  tm_layout(\n    title = \"Crashes in Relation to Bike Infrastructure\",\n    legend.outside = TRUE,\n    frame = FALSE,\n    inner.margins = c(0.05, 0.05, 0.05, 0.05)  # avoids tiny top-left map\n  )\n\nbike_crash_map\n```\n\n::: {.cell-output-display}\n![](Cahill_Joey_Assignment2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n**Interpretation:**\n\nIn this analysis, I compared bicycle injury rates to type of protection in bike lanes. I found that crashes in conventional bike lanes were more likely to result in injury than those in separated bike lanes overall. This indicates that enhanced protection reduces injuries in crashes with other cyclists, automobiles, and pedestrians. Based on this analysis, I would recommend that the city of Philadelphia invest in protection for Bike Lanes and to reduce the amount of injuries sustained by all parties involved in crashes.  \n\n\n## Feedback!\nTo incorporate feedback from my previous assignment, I hid my census API key from the rendered html file and cleaned up the formatting of my document. I removed traces of the original template and formatted it as if it were a published study. I tried to minimize printing results without explanation. \n\n---\n",
    "supporting": [
      "Cahill_Joey_Assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}